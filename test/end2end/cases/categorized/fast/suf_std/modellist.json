[
  {
    "name" : "dietu_stt sstatus",
    "objective" : 74.273820,
    "tags" : ["linear", "continuous", "sstatus"],
    "values": {
      "Buy['BEEF'].sstatus": "low",
      "Buy['MTL'].sstatus":  "bas",
      "Buy['CHK'].sstatus":  "upp",
      "Diet_Min['A'].sstatus": "bas"
    }
  },
  {
    "name" : "wine_2solve",
    "files" : ["wine_2solve.run"],
    "objective" : 17,
    "tags" : ["linear", "continuous", "sstatus"],
    "values": {
      "mulled_wine.sstatus": "bas",
      "sugar_constraint.sstatus":  "upp"
    }
  },
  {
    "name" : "dietu_stt test sstatus IN",
    "objective" : 74.273820,
    "tags" : ["linear", "continuous", "sstatus"],
    "options": { "ANYSOLVER_options": "debug=1" },
    "values": {
      "Buy['BEEF'].test_sstatus": 1,
      "Buy['MTL'].test_sstatus":  4,
      "Buy['CHK'].sstatus":  "upp",
      "Diet_Min['A'].test_sstatus": 1
    }
  },
  {
    "name" : "diet writeprob='diet.lp' (quoted)",
    "objective" : 88.2,
    "tags" : ["linear", "continuous", "writelp"],
    "files" : ["diet.mod", "diet.dat"],
    "options": {
      "ANYSOLVER_options": "writeprob='diet.lp'"
    },
    "comment": "Testing quoted string options"
  },
  {
    "name" : "diet writesol=diet.sol",
    "objective" : 88.2,
    "tags" : ["linear", "continuous", "writesol"],
    "files" : ["diet.mod", "diet.dat"],
    "options": {
      "ANYSOLVER_options": "writesol=diet.sol"
    },
    "comment": "Testing quoted string options"
  },
  {
    "name" : "diet duals; var/con sstatus",
    "objective" : 88.2,
    "tags" : ["linear", "continuous", "sstatus"],
    "files" : ["diet.mod", "diet.dat"],
    "values": {
      "Buy['BEEF'].sstatus": "low",
      "Buy['MCH'].sstatus":  "bas",
      "Buy['CHK'].sstatus":  "low",
      "sum {i in NUTR} Diet[i]*(if 'upp'==Diet[i].sstatus then n_max[i] else if 'low'==Diet[i].sstatus then n_min[i])": 88.2
    }
  },
  {
    "name" : "diet_statuses preset incomplete",
    "objective" : 88.2,
    "tags" : ["linear", "continuous", "sstatus"],
    "values": {
      "Buy['BEEF'].sstatus": "low",
      "Buy['MCH'].sstatus":  "bas",
      "Buy['CHK'].sstatus":  "low",
      "Diet['B2'].sstatus": "low",
      "sum {i in NUTR} Diet[i]*(if 'upp'==Diet[i].sstatus then n_max[i] else if 'low'==Diet[i].sstatus then n_min[i])": 88.2
    }
  },
  {
    "name" : "dietu_mip mip:basis=1",
    "objective" : 74.273820,
    "tags" : ["linear", "continuous", "fixmodel"],
    "options": { "ANYSOLVER_options": "mip:basis=1" },
    "values": {
      "Buy['BEEF'].sstatus": "low",
      "Buy['MTL'].sstatus":  "bas",
      "Buy['CHK'].sstatus":  "upp",
      "Diet_Min['A']": 0.0,
      "Diet_Min['C']": 0.006707865168539329,
      "Diet_Min['CAL']": 0.00447191011235955,
      "Diet_Min['A'].sstatus": "bas"
    }
  },
  {
    "name" : "dietu_mip mip:basis=0 (default for x-gurobi)",
    "objective" : 74.273820,
    "tags" : ["linear", "continuous", "fixmodel"],
    "values": {
      "Buy['BEEF'].sstatus": "bas",
      "Buy['MTL'].sstatus":  "upp",
      "Diet_Min['C']": 0,
      "Diet_Min['CAL']": 0
    }
  },
  {
    "name" : "mipb_int mip:basis=1",
    "objective" : 1,
    "tags" : ["linear", "continuous", "fixmodel"],
    "options": { "ANYSOLVER_options": "mip:basis=1" },
    "values": {
      "x.sstatus": "low",
      "y.sstatus": "low",
      "z.sstatus": "low",
      "C1": 0,
      "C1.sstatus": "bas"
    }
  }
]
